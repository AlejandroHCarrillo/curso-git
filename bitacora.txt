Se creo el repositorio				        git init
Se creo el branch develop			        git checkout -b develop
Se agregaro el archivo bitacora al stage	git add .
se dio commit al archivo de bitacora		git commit -m "Creacion de la bitacora"
se subieron los cambios al branch develop	
Se modifico el archivo de bitacora
Se cambio el mensaje del ultimo commit		git commit --amend -m "Creacion de la bitacora de trabajo"
Se creo el branch master			        git branch master
Se modifico la bitacora en el branch Master
Ver el log con formato                      git log --oneline --decorate --all --graph 
Crear alias para Log con formato            git config --global alias.lg "log --oneline --decorate --all --graph"
Usar el nuevo alias                         git lg
Crear alias status una linea con branch     git config --global alias.s "status -s -b"
Ver las diferencias del archivo original    git diff / git diff --staged
Para un archivo del stage                   git reset HEAD [Archivo.ext]
Para descartar los cambios de un archivo    git checkout --[Archivo.ext]

Soft reset para regresar a un commit        git reset --soft 34443de
Mixed reset para regresar a un commit       git reset --mixed 34443de
Hard reset para regresar a un commit        git reset --hard 34443de
Ver todos los commits aunque los hallamos borrado soft o hard   git reflog

Renombrar o mover un archivo usando git     git mv viejonombre.txt nuevonombre.txt
Eliminar un archivo usando git              git rm archivo.txt
Actualiza el estatus de los archivos        git add -u 

Comparar cambios entre 2 baches             git diff branch1 branch2

Para hacer un merge me tengo que poner sobre el branch que va atras, luego hacer el merge del branch que va adelante
En este caso Master esta atras de develop

    *   b1cb2c5 (develop) Merge branch 'master' into develop
    |\
    | * 947b0f7 (HEAD -> master, curso-git/master) Agregar el .gitignore
    | * b4b05e6 arreglando archivo README.md y bitacora.txt
    |/
    * 995de5d Commits eliminados y recuperados

Nos cambiamos a Master
git checkout master

Hacemos el merge de develop a master (en el cual estamos parados)
git merge develop

